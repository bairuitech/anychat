//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
#endif

#pragma mark - Define VideoVC Function Parameters & Method

#define kSelfView_Width                     self.view.frame.size.width
#define kSelfView_Height                    self.view.frame.size.height
#define kScreenWidth ([UIScreen mainScreen].bounds.size.width)
#define kScreenHeight ([UIScreen mainScreen].bounds.size.height)
#define kDegreesToRadian(degrees)           (M_PI * (degrees) / 180.0)
#define kLayer_Z_Axis_3DRotation(degrees)    CATransform3DMakeRotation(kDegreesToRadian(degrees), 0.0, 0.0, 1.0)

#define kLocalVideo_Width                   AdaptW(121.0f)
#define kLocalVideo_Height                  AdaptW(162.0f)
#define kBar_Height                         (float)30.0f
#define kUI_Spacing                         (float)2.0f

#define kLocalVideoPortrait_X_Axis          kSelfView_Width - kUI_Spacing - kLocalVideo_Width
#define kLocalVideoPortrait_Y_Axis          kSelfView_Height - kLocalVideo_Height - kUI_Spacing - kBar_Height
#define kLocalVideoLandscape_X_Axis         kSelfView_Width - kUI_Spacing - kLocalVideo_Height
#define kLocalVideoLandscape_Y_Axis         kSelfView_Height - kLocalVideo_Width - kUI_Spacing - kBar_Height

#define kLocalVideoPortrait_CGRect          CGRectMake(kLocalVideoPortrait_X_Axis, kLocalVideoPortrait_Y_Axis, kLocalVideo_Width, kLocalVideo_Height)
#define kLocalVideoLandscape_CGRect         CGRectMake(kLocalVideoLandscape_X_Axis, kLocalVideoLandscape_Y_Axis, kLocalVideo_Height, kLocalVideo_Width)

#pragma mark - GCD Synthesize Singleton Mode

#define kGCD_SINGLETON_FOR_HEADER(classname) \
\
+ (instancetype)shared##classname;

#define kGCD_SINGLETON_FOR_CLASS(classname) \
\
static classname *shared##classname = nil; \
\
+(id)allocWithZone:(struct _NSZone *)zone   \
{   \
static dispatch_once_t onceToken;   \
dispatch_once(&onceToken, ^{    \
shared##classname = [super allocWithZone:zone]; \
});     \
return shared##classname;   \
}   \
\
+(instancetype)shared##classname   \
{   \
static dispatch_once_t onceToken;   \
dispatch_once(&onceToken, ^{    \
shared##classname = [[classname alloc] init];   \
});     \
return shared##classname;   \
}   \
\
-(id)copyWithZone:(NSZone *)zone    \
{   \
return shared##classname;   \
}

#pragma mark - Device Type

#define	 k_isRetina	 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) : NO)
#define	 k_iPhone5 	([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define	 k_isPad 	(UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define k_iPhoneX_XS_11Pro (kScreenWidth == 375.f && kScreenHeight == 812.f ? YES : NO)
#define k_iPhoneXR_XSMax_11_11ProMax (kScreenWidth == 414.f && kScreenHeight == 896.f ? YES : NO)

#import "IQKeyboardManager.h"
#import "ACBaseViewController.h"
#import "UIView+AdaptScreen.h"
#import "UINavigationController+DeviceOrientataion.h"
